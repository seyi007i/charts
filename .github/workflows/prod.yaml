name: Deploy Nginx (Prod)

on:
 # push:
 #   branches:
 #     - gh-pages
  workflow_dispatch:

env:
  IMAGE_NAME: seyiogunniran/my-nginx

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      env: prod
      tag: ${{ steps.build-image.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag Docker image
        id: build-image
        run: |
          TAG=prod-${GITHUB_SHA}
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: 
      name: prod
      url: http://ec2-35-177-103-200.eu-west-2.compute.amazonaws.com
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST_PROD }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Ensure directory exists
            cd /opt/nginx-app

            # Clone or update repo
            if [ ! -d ".git" ]; then
              git clone --branch ${{ github.ref_name }} https://github.com/${{ github.repository }} .
            else
              git fetch --all
              git checkout ${{ github.ref_name }}
              git reset --hard origin/${{ github.ref_name }}
              git clean -fd
            fi

            # Update docker-compose.yaml image line
            export IMAGE=${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}
            sed -i "s|image: .*|image: $IMAGE|" docker-compose.yaml

            # Pull and restart with new image
            docker compose -f docker-compose.yaml pull
            docker compose -f docker-compose.yaml up -d